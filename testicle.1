.\" $Id$
.TH testicle 1 "MAR 2007" "Testicle" "User Manuals"
.
.
.SH "NAME"
testicle \- build C++ unit tests
.
.
.SH "SYNOPSIS"
.B testicle
.RB [ \-o
.IR outfile ]
.RB [ --tests = \fIpattern ]
.I infile
\&...
.br
.B testicle
.B --help
.br
.B testicle
.B --version
.
.
.SH "DESCRIPTION"
.B testicle
accepts one or more object files
containing test functions (referred to here under the popular name
.IR "unit tests" )
and generates C++ source for driving those tests.
.PP
It works by invoking
.B nm
to find symbols likely to be tests in those object files.
Compiling, linking and executing the tests
is left to the user,
through a Makefile or other means.
.
.
.SS "Test functions"
.
Test functions must have the signature
.IP
\fIvoid test...();\fP
.PP
and may be inside the global or any other namespace.
There is no requirement to group the tests into classes.
In fact, there is no direct support for doing so.
.PP
Executing a test results in one out of three things:
.IP \fB\s-2PASS\s0
the function returns normally
.IP \fB\s-2FAIL\s0
the function throws a
.B TesticleAssertionError
exception. Uutility functions for throwing
.B TesticleAssertionError
are available in
.BR testicle.h .
.IP \fB\s-2ERROR\s0
the function throws any other exception.
.PP
Of course, the test may also crash, run forever, or call
.BR std::exit ()
or some similar function.
.
.
.SS "The test program"
The executable test program generated by
.B testicle
has the synopsis
.PP
.B ./test
.RB [ \-v ]
.RI [ pattern
\&...]
.br
.B ./test
.B \-l
.RI [ pattern
\&...]
.PP
The first form executes all tests or all tests matching the given pattern(s),
and returns with a zero exit status if all of them pass.
By default, a brief progress indication and a summary
are printed to standard error. The
.B \-v
option makes the progress more verbose.
.PP
The second form simply lists tests without executing them.
.
.
.SH "OPTIONS"
.
.
.IP \-o\ \fIoutfile
Name the C++ source test driver.
If not provided, it will be named, simply,
.BR test.cc .
.
.
.IP --tests=\fIpattern
Assume symbols matching the Perl-compatible regular expression
.I pattern
are unit tests, instead of any function, in any namespace,
whose name starts with
.BR test .
.
.
.IP --help
Print the usage message and exit.
.
.
.IP --version
Print version information and exit.
.
.
.SH "EXIT STATUS"
.B 0
if the test program is generated correctly.
.
.
.SH "AUTHOR"
J\(:orgen Grahn
.I \[fo]grahn+src@snipabacken.dyndns.org\[fc]
.PP
This software is released under the
.IR "Modified BSD License" .
.
.
.SH "SEE ALSO"
.BR nm (1).
